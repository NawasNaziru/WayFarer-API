{
  "{\"sourceRoot\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\owner\\\\Banka\",\"filename\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\owner\\\\Banka\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\owner\\Banka\\server",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\owner\\Banka",
      "filename": "C:\\Users\\owner\\Banka\\server\\app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\owner\\Banka",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\owner\\Banka\\server\\app.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\owner\\Banka\\server\\app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\owner\\Banka\\server",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _dotenv = _interopRequireDefault(require(\"dotenv\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _morgan = _interopRequireDefault(require(\"morgan\"));\n\nvar _cookieParser = _interopRequireDefault(require(\"cookie-parser\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nvar _debug = _interopRequireDefault(require(\"debug\"));\n\nvar _pg = _interopRequireDefault(require(\"pg\"));\n\nvar _index = _interopRequireDefault(require(\"./routes/index\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\n_dotenv[\"default\"].load();\n\nvar debug = (0, _debug[\"default\"])('Express4');\nvar app = (0, _express[\"default\"])();\n/* Below are Non-persistent data structures of choice.\r\nSome of them are prefilled with some data for mocha and chai http test.\r\nThis is because chai always restart the node server for each request.\r\nHence, the need for some test data, independent of previous request. */\n\nglobal.Users = {\n  'nawasnaziru@gmail.com': {\n    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjAsImVtYWlsIjoibmF3YXNuYXppcnVAZ21haWwuY29tIiwibmFtZSI6Im5hd2FzIiwiZXhwIjoxNTU1NDE1MjQ1LCJpYXQiOjE1NTQ4MTA0NDV9.2QscsXy8fuPXnO59OIml78T7O6rBhuXmk2H-yBmLzW8',\n    id: 0,\n    firstName: 'nawas',\n    lastName: 'adam',\n    email: 'nawasnaziru@gmail.com',\n    type: 'client',\n    isAdmin: false,\n    password: '123456a'\n  },\n  'linustorvalds@linux.com': {\n    token: 'fyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjAsImVtYWlsIjoibmF3YXNuYXppcnVAZ21haWwuY29tIiwibmFtZSI6Im5hd2FzIiwiZXhwIjoxNTU1NDE1MjQ1LCJpYXQiOjE1NTQ4MTA0NDV9.2QscsXy8fuPXnO59OIml78T7O6rBhuXmk2H-yBmLzW8',\n    id: 316,\n    firstName: 'linus',\n    lastName: 'torvalds',\n    email: 'linustorvalds@linux.com',\n    type: 'staff',\n    isAdmin: true,\n    password: '123456b'\n  }\n}; // global.Users = {};\n\nglobal.Accounts = {\n  accountNumber: {\n    accountNumber: 2000000000,\n    firstName: 'nawas',\n    lastName: 'adam',\n    email: 'nawasnaziru@gmail.com',\n    type: 'savings',\n    openingBalance: 0,\n    createdOn: '2019-04-11T09:10:33.000Z',\n    owner: 0,\n    status: 'active',\n    balance: 0,\n    id: 0\n  }\n};\nglobal.nextAccount = 2000000000;\nglobal.Transactions = {};\nglobal.staffIds = [104, 189, 316, 427, 518];\nglobal.adminIds = [411, 581, 611, 723, 851];\napp.use((0, _morgan[\"default\"])('dev'));\napp.use(_bodyParser[\"default\"].json());\napp.use(_bodyParser[\"default\"].urlencoded({\n  extended: false\n}));\napp.use((0, _cookieParser[\"default\"])());\napp.use(_express[\"default\"][\"static\"](_path[\"default\"].join(__dirname, 'UI')));\napp.use('/api/v1', _index[\"default\"]);\nvar config = {\n  user: 'postgres',\n  database: 'Banka',\n  password: 'zazaa1992',\n  port: 5432,\n  max: 10,\n  // max number of connection can be open to database\n  idleTimeoutMillis: 30000 // how long a client is allowed to remain idle before being closed\n\n};\nvar pool = new _pg[\"default\"].Pool(config);\napp.get('/pool', function (req, res, next) {\n  pool.connect(function (err, client, done) {\n    if (err) {\n      console.log(\"not able to get connection due to \" + err);\n      res.status(400).send(err);\n      return;\n    }\n\n    client.query('SELECT * FROM student where id = $1', [1], function (err, result) {\n      done(); // closing the connection;\n\n      if (err) {\n        console.log(err);\n        res.status(400).send(err);\n      }\n\n      res.status(200).send(result.rows);\n    });\n  });\n});\napp.use(function (req, res) {\n  res.sendFile(_path[\"default\"].join(__dirname, 'UI', 'index.html'));\n}); // catch 404 and forward to error handler\n\napp.use(function (req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n}); // error handlers\n// Catch unauthorised errors\n\napp.use(function (err, req, res) {\n  if (err.name === 'UnauthorizedError') {\n    res.status(401);\n    res.json({\n      message: \"\".concat(err.name, \": \").concat(err.message)\n    });\n  }\n}); // development error handler\n// will print stacktrace\n\nif (app.get('env') === 'development') {\n  app.use(function (err, req, res) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n} // production error handler\n// no stacktraces leaked to user\n\n\napp.use(function (err, req, res) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n}); // start server\n\napp.set('port', process.env.PORT || 3000);\nvar server = app.listen(app.get('port'), function () {\n  debug('Express server listening on port ' + server.address().port);\n  console.log('Express server listening on localhost:3000');\n});\nvar _default = app;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "app.js"
      ],
      "names": [
        "dotenv",
        "load",
        "debug",
        "app",
        "global",
        "Users",
        "token",
        "id",
        "firstName",
        "lastName",
        "email",
        "type",
        "isAdmin",
        "password",
        "Accounts",
        "accountNumber",
        "openingBalance",
        "createdOn",
        "owner",
        "status",
        "balance",
        "nextAccount",
        "Transactions",
        "staffIds",
        "adminIds",
        "use",
        "bodyParser",
        "json",
        "urlencoded",
        "extended",
        "express",
        "path",
        "join",
        "__dirname",
        "router",
        "config",
        "user",
        "database",
        "port",
        "max",
        "idleTimeoutMillis",
        "pool",
        "pg",
        "Pool",
        "get",
        "req",
        "res",
        "next",
        "connect",
        "err",
        "client",
        "done",
        "console",
        "log",
        "send",
        "query",
        "result",
        "rows",
        "sendFile",
        "Error",
        "name",
        "message",
        "render",
        "error",
        "set",
        "process",
        "env",
        "PORT",
        "server",
        "listen",
        "address"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\owner\\Banka\\server",
      "sourcesContent": [
        "import dotenv from 'dotenv';\r\ndotenv.load();\r\nimport express from 'express';\r\nimport path from 'path';\r\nimport logger from 'morgan';\r\nimport cookieParser from 'cookie-parser';\r\nimport bodyParser from 'body-parser';\r\nimport Debug from 'debug';\r\nconst debug = Debug('Express4');\r\nimport pg from 'pg';\r\n\r\nimport  router from './routes/index';\r\n\r\nconst app = express();\r\n\r\n/* Below are Non-persistent data structures of choice.\r\nSome of them are prefilled with some data for mocha and chai http test.\r\nThis is because chai always restart the node server for each request.\r\nHence, the need for some test data, independent of previous request. */\r\n\r\nglobal.Users = {\r\n  'nawasnaziru@gmail.com': {\r\n    token: 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjAsImVtYWlsIjoibmF3YXNuYXppcnVAZ21haWwuY29tIiwibmFtZSI6Im5hd2FzIiwiZXhwIjoxNTU1NDE1MjQ1LCJpYXQiOjE1NTQ4MTA0NDV9.2QscsXy8fuPXnO59OIml78T7O6rBhuXmk2H-yBmLzW8',\r\n    id: 0,\r\n    firstName: 'nawas',\r\n    lastName: 'adam',\r\n    email: 'nawasnaziru@gmail.com',\r\n    type: 'client',\r\n    isAdmin: false,\r\n    password: '123456a',\r\n  },\r\n  'linustorvalds@linux.com': {\r\n    token: 'fyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJfaWQiOjAsImVtYWlsIjoibmF3YXNuYXppcnVAZ21haWwuY29tIiwibmFtZSI6Im5hd2FzIiwiZXhwIjoxNTU1NDE1MjQ1LCJpYXQiOjE1NTQ4MTA0NDV9.2QscsXy8fuPXnO59OIml78T7O6rBhuXmk2H-yBmLzW8',\r\n    id: 316,\r\n    firstName: 'linus',\r\n    lastName: 'torvalds',\r\n    email: 'linustorvalds@linux.com',\r\n    type: 'staff',\r\n    isAdmin: true,\r\n    password: '123456b',\r\n  },\r\n};\r\n\r\n// global.Users = {};\r\n\r\nglobal.Accounts = {\r\n  accountNumber: {\r\n    accountNumber: 2000000000,\r\n    firstName: 'nawas',\r\n    lastName: 'adam',\r\n    email: 'nawasnaziru@gmail.com',\r\n    type: 'savings',\r\n    openingBalance: 0,\r\n    createdOn: '2019-04-11T09:10:33.000Z',\r\n    owner: 0,\r\n    status: 'active',\r\n    balance: 0,\r\n    id: 0,\r\n  },\r\n};\r\n\r\nglobal.nextAccount = 2000000000;\r\nglobal.Transactions = {};\r\n\r\nglobal.staffIds = [104, 189, 316, 427, 518];\r\nglobal.adminIds = [411, 581, 611, 723, 851];\r\n\r\napp.use(logger('dev'));\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(cookieParser());\r\n\r\napp.use(express.static(path.join(__dirname, 'UI')));\r\n\r\napp.use('/api/v1', router);\r\n\r\nvar config = {\r\n  user: 'postgres',\r\n  database: 'Banka', \r\n  password: 'zazaa1992', \r\n  port: 5432, \r\n  max: 10, // max number of connection can be open to database\r\n  idleTimeoutMillis: 30000, // how long a client is allowed to remain idle before being closed\r\n};\r\n\t\r\nvar pool = new pg.Pool(config);\r\n \r\napp.get('/pool', (req, res, next) => {\r\n    pool.connect((err,client,done) => {\r\n       if(err){\r\n           console.log(\"not able to get connection due to \" + err);\r\n           res.status(400).send(err);\r\n           return;\r\n       } \r\n       client.query('SELECT * FROM student where id = $1', [1],(err,result) => {\r\n           done(); // closing the connection;\r\n           if(err){\r\n               console.log(err);\r\n               res.status(400).send(err);\r\n           }\r\n           res.status(200).send(result.rows);\r\n       });\r\n    });\r\n});\r\n\r\napp.use((req, res) => {\r\n  res.sendFile(path.join(__dirname, 'UI', 'index.html'));\r\n});\r\n\r\n// catch 404 and forward to error handler\r\napp.use((req, res, next) => {\r\n  const err = new Error('Not Found');\r\n  err.status = 404;\r\n  next(err);\r\n});\r\n\r\n// error handlers\r\n// Catch unauthorised errors\r\napp.use((err, req, res) => {\r\n  if (err.name === 'UnauthorizedError') {\r\n    res.status(401);\r\n    res.json({ message: `${err.name}: ${err.message}` });\r\n  }\r\n});\r\n\r\n// development error handler\r\n// will print stacktrace\r\nif (app.get('env') === 'development') {\r\n  app.use((err, req, res) => {\r\n    res.status(err.status || 500);\r\n    res.render('error', {\r\n      message: err.message,\r\n      error: err,\r\n    });\r\n  });\r\n}\r\n\r\n// production error handler\r\n// no stacktraces leaked to user\r\napp.use((err, req, res) => {\r\n  res.status(err.status || 500);\r\n  res.render('error', {\r\n    message: err.message,\r\n    error: {},\r\n  });\r\n});\r\n\r\n// start server\r\n\r\napp.set('port', process.env.PORT || 3000);\r\n\r\nconst server = app.listen(app.get('port'), () => {\r\n  debug('Express server listening on port ' + server.address().port);\r\n console.log('Express server listening on localhost:3000');\r\n});\r\n\r\nexport default app;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1558874445890
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\routes\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\owner\\\\Banka\",\"filename\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\routes\\\\index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\owner\\\\Banka\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\routes",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\owner\\Banka",
      "filename": "C:\\Users\\owner\\Banka\\server\\routes\\index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\owner\\Banka",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\owner\\Banka\\server\\routes\\index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\owner\\Banka\\server\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\owner\\Banka\\server\\routes",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar ctrlAuth = _interopRequireWildcard(require(\"../controllers/authentication\"));\n\nvar ctrlAcc = _interopRequireWildcard(require(\"../controllers/accounts\"));\n\nvar ctrlTxn = _interopRequireWildcard(require(\"../controllers/transactions.js\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar router = _express[\"default\"].Router();\n\n// signup route\nrouter.post('/users/auth/signin', ctrlAuth.login); // sign in route\n\nrouter.post('/users/auth/signup', ctrlAuth.register); // account routes\n\nrouter.post('/accounts', ctrlAcc.create);\nrouter.patch('/accounts/:accountNumber', ctrlAcc.activate_deactivate);\nrouter[\"delete\"]('/accounts/:accountNumber', ctrlAcc.delete_account); // transaction routes\n\nrouter.post('/transactions/:accountNumber/debit', ctrlTxn.debit);\nrouter.post('/transactions/:accountNumber/credit', ctrlTxn.credit);\nvar _default = router;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInJvdXRlciIsImV4cHJlc3MiLCJSb3V0ZXIiLCJwb3N0IiwiY3RybEF1dGgiLCJsb2dpbiIsInJlZ2lzdGVyIiwiY3RybEFjYyIsImNyZWF0ZSIsInBhdGNoIiwiYWN0aXZhdGVfZGVhY3RpdmF0ZSIsImRlbGV0ZV9hY2NvdW50IiwiY3RybFR4biIsImRlYml0IiwiY3JlZGl0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBSUE7O0FBRUE7O0FBRUE7Ozs7OztBQU5BLElBQU1BLE1BQU0sR0FBR0Msb0JBQVFDLE1BQVIsRUFBZjs7QUFRQTtBQUVBRixNQUFNLENBQUNHLElBQVAsQ0FBWSxvQkFBWixFQUFrQ0MsUUFBUSxDQUFDQyxLQUEzQyxFLENBRUE7O0FBQ0FMLE1BQU0sQ0FBQ0csSUFBUCxDQUFZLG9CQUFaLEVBQWtDQyxRQUFRLENBQUNFLFFBQTNDLEUsQ0FFQTs7QUFFQU4sTUFBTSxDQUFDRyxJQUFQLENBQVksV0FBWixFQUF5QkksT0FBTyxDQUFDQyxNQUFqQztBQUNBUixNQUFNLENBQUNTLEtBQVAsQ0FBYSwwQkFBYixFQUF5Q0YsT0FBTyxDQUFDRyxtQkFBakQ7QUFDQVYsTUFBTSxVQUFOLENBQWMsMEJBQWQsRUFBMENPLE9BQU8sQ0FBQ0ksY0FBbEQsRSxDQUVBOztBQUNBWCxNQUFNLENBQUNHLElBQVAsQ0FBWSxvQ0FBWixFQUFrRFMsT0FBTyxDQUFDQyxLQUExRDtBQUNBYixNQUFNLENBQUNHLElBQVAsQ0FBWSxxQ0FBWixFQUFtRFMsT0FBTyxDQUFDRSxNQUEzRDtlQUNlZCxNIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcb3duZXJcXEJhbmthXFxzZXJ2ZXJcXHJvdXRlcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xyXG5cclxuY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcclxuXHJcbmltcG9ydCAqIGFzIGN0cmxBdXRoIGZyb20gJy4uL2NvbnRyb2xsZXJzL2F1dGhlbnRpY2F0aW9uJ1xyXG5cclxuaW1wb3J0ICogYXMgY3RybEFjYyBmcm9tICcuLi9jb250cm9sbGVycy9hY2NvdW50cyc7XHJcblxyXG5pbXBvcnQgKiBhcyBjdHJsVHhuIGZyb20gJy4uL2NvbnRyb2xsZXJzL3RyYW5zYWN0aW9ucy5qcyc7XHJcblxyXG4vLyBzaWdudXAgcm91dGVcclxuXHJcbnJvdXRlci5wb3N0KCcvdXNlcnMvYXV0aC9zaWduaW4nLCBjdHJsQXV0aC5sb2dpbik7XHJcblxyXG4vLyBzaWduIGluIHJvdXRlXHJcbnJvdXRlci5wb3N0KCcvdXNlcnMvYXV0aC9zaWdudXAnLCBjdHJsQXV0aC5yZWdpc3Rlcik7XHJcblxyXG4vLyBhY2NvdW50IHJvdXRlc1xyXG5cclxucm91dGVyLnBvc3QoJy9hY2NvdW50cycsIGN0cmxBY2MuY3JlYXRlKTtcclxucm91dGVyLnBhdGNoKCcvYWNjb3VudHMvOmFjY291bnROdW1iZXInLCBjdHJsQWNjLmFjdGl2YXRlX2RlYWN0aXZhdGUpO1xyXG5yb3V0ZXIuZGVsZXRlKCcvYWNjb3VudHMvOmFjY291bnROdW1iZXInLCBjdHJsQWNjLmRlbGV0ZV9hY2NvdW50KTtcclxuXHJcbi8vIHRyYW5zYWN0aW9uIHJvdXRlc1xyXG5yb3V0ZXIucG9zdCgnL3RyYW5zYWN0aW9ucy86YWNjb3VudE51bWJlci9kZWJpdCcsIGN0cmxUeG4uZGViaXQpO1xyXG5yb3V0ZXIucG9zdCgnL3RyYW5zYWN0aW9ucy86YWNjb3VudE51bWJlci9jcmVkaXQnLCBjdHJsVHhuLmNyZWRpdCk7XHJcbmV4cG9ydCBkZWZhdWx0IHJvdXRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "router",
        "express",
        "Router",
        "post",
        "ctrlAuth",
        "login",
        "register",
        "ctrlAcc",
        "create",
        "patch",
        "activate_deactivate",
        "delete_account",
        "ctrlTxn",
        "debit",
        "credit"
      ],
      "mappings": ";;;;;;;AAAA;;AAIA;;AAEA;;AAEA;;;;;;AANA,IAAMA,MAAM,GAAGC,oBAAQC,MAAR,EAAf;;AAQA;AAEAF,MAAM,CAACG,IAAP,CAAY,oBAAZ,EAAkCC,QAAQ,CAACC,KAA3C,E,CAEA;;AACAL,MAAM,CAACG,IAAP,CAAY,oBAAZ,EAAkCC,QAAQ,CAACE,QAA3C,E,CAEA;;AAEAN,MAAM,CAACG,IAAP,CAAY,WAAZ,EAAyBI,OAAO,CAACC,MAAjC;AACAR,MAAM,CAACS,KAAP,CAAa,0BAAb,EAAyCF,OAAO,CAACG,mBAAjD;AACAV,MAAM,UAAN,CAAc,0BAAd,EAA0CO,OAAO,CAACI,cAAlD,E,CAEA;;AACAX,MAAM,CAACG,IAAP,CAAY,oCAAZ,EAAkDS,OAAO,CAACC,KAA1D;AACAb,MAAM,CAACG,IAAP,CAAY,qCAAZ,EAAmDS,OAAO,CAACE,MAA3D;eACed,M",
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\routes",
      "sourcesContent": [
        "import express from 'express';\r\n\r\nconst router = express.Router();\r\n\r\nimport * as ctrlAuth from '../controllers/authentication'\r\n\r\nimport * as ctrlAcc from '../controllers/accounts';\r\n\r\nimport * as ctrlTxn from '../controllers/transactions.js';\r\n\r\n// signup route\r\n\r\nrouter.post('/users/auth/signin', ctrlAuth.login);\r\n\r\n// sign in route\r\nrouter.post('/users/auth/signup', ctrlAuth.register);\r\n\r\n// account routes\r\n\r\nrouter.post('/accounts', ctrlAcc.create);\r\nrouter.patch('/accounts/:accountNumber', ctrlAcc.activate_deactivate);\r\nrouter.delete('/accounts/:accountNumber', ctrlAcc.delete_account);\r\n\r\n// transaction routes\r\nrouter.post('/transactions/:accountNumber/debit', ctrlTxn.debit);\r\nrouter.post('/transactions/:accountNumber/credit', ctrlTxn.credit);\r\nexport default router;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555604168000
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\owner\\\\Banka\",\"filename\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\controllers\\\\authentication.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\owner\\\\Banka\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\owner\\Banka",
      "filename": "C:\\Users\\owner\\Banka\\server\\controllers\\authentication.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\owner\\Banka",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\owner\\Banka\\server\\controllers\\authentication.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\owner\\Banka\\server\\controllers\\authentication.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
        "sourceFileName": "authentication.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.register = exports.login = void 0;\n\nvar _jsonwebtoken = _interopRequireDefault(require(\"jsonwebtoken\"));\n\nvar _bcrypt = _interopRequireDefault(require(\"bcrypt\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar saltRounds = 10; // Predefined generic function for server response in feature modules\n\nvar sendJSONresponse = function sendJSONresponse(res, status, content) {\n  res.status(status);\n  res.json(content);\n};\n\nvar login = function login(req, res) {\n  if (!req.body.email || !req.body.password) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Requires your email and password'\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 401, {\n      status: 401,\n      error: 'Sign up first'\n    });\n    return;\n  }\n\n  if (!Users[req.body.email].password) {\n    sendJSONresponse(res, 401, {\n      status: 401,\n      error: 'Sign up Again. Your password was lost'\n    });\n    return;\n  }\n\n  if (req.body.password !== Users[req.body.email]['password']) {\n    sendJSONresponse(res, 401, {\n      status: 401,\n      error: 'Incorrect password'\n    });\n    return;\n  }\n\n  if (req.body.email !== Users[req.body.email].email) {\n    sendJSONresponse(res, 401, {\n      status: 401,\n      error: 'Incorrect username'\n    });\n    return;\n  }\n\n  var user = Users[req.body.email];\n  sendJSONresponse(res, 200, {\n    status: 200,\n    data: user\n  });\n  return;\n};\n\nexports.login = login;\n\nvar register = function register(req, res) {\n  if (!req.body.firstName || !req.body.lastName || !req.body.email || !req.body.password) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Requires your firstName, lastName, email and password!'\n    });\n    return;\n  }\n\n  var salt = _bcrypt[\"default\"].genSaltSync(saltRounds);\n\n  var hash = _bcrypt[\"default\"].hashSync(req.body.password, salt);\n\n  var userId = Object.keys(Users).length;\n  var userPassword = req.body.password;\n\n  var generateJwt = function generateJwt() {\n    var expiry = new Date();\n    expiry.setDate(expiry.getDate() + 7);\n    return _jsonwebtoken[\"default\"].sign({\n      _id: userId,\n      email: req.body.email,\n      name: req.body.firstName,\n      exp: parseInt(expiry.getTime() / 1000, 10)\n    }, process.env.JWT_SECRET); // DO NOT KEEP YOUR SECRET IN THE CODE!\n  };\n\n  var hasId = function hasId(arr, id) {\n    for (var i = 0; i < arr.length; i += 1) {\n      if (arr[i] === id) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var user = {};\n  var id = parseInt(req.body.id, 10);\n  user.token = generateJwt();\n  hasId(staffIds, id) || hasId(adminIds, id) ? user.id = parseInt(req.body.id, 10) : user.id = userId;\n  user.firstName = req.body.firstName;\n  user.lastName = req.body.lastName;\n  user.email = req.body.email;\n  hasId(staffIds, id) || hasId(adminIds, id) ? user.type = 'staff' : user.type = 'client';\n  user.type === 'staff' ? user.isAdmin = true : user.isAdmin = false; // save newly registered user\n\n  Users[user.email] = user;\n  sendJSONresponse(res, 201, {\n    status: 201,\n    data: user\n  }); // The below is for security purpose, such that password and hash can only be seen\n  // after user sign in. Thus, making it  unhelpful for a hacker.\n\n  user.password = userPassword;\n  user.hash = hash;\n  Users[user.email] = user;\n};\n\nexports.register = register;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "authentication.js"
      ],
      "names": [
        "saltRounds",
        "sendJSONresponse",
        "res",
        "status",
        "content",
        "json",
        "login",
        "req",
        "body",
        "email",
        "password",
        "error",
        "Users",
        "user",
        "data",
        "register",
        "firstName",
        "lastName",
        "salt",
        "bcrypt",
        "genSaltSync",
        "hash",
        "hashSync",
        "userId",
        "Object",
        "keys",
        "length",
        "userPassword",
        "generateJwt",
        "expiry",
        "Date",
        "setDate",
        "getDate",
        "jwt",
        "sign",
        "_id",
        "name",
        "exp",
        "parseInt",
        "getTime",
        "process",
        "env",
        "JWT_SECRET",
        "hasId",
        "arr",
        "id",
        "i",
        "token",
        "staffIds",
        "adminIds",
        "type",
        "isAdmin"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;AAEA,IAAMA,UAAU,GAAG,EAAnB,C,CAEA;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,MAAN,EAAcC,OAAd,EAA0B;AACjDF,EAAAA,GAAG,CAACC,MAAJ,CAAWA,MAAX;AACAD,EAAAA,GAAG,CAACG,IAAJ,CAASD,OAAT;AACD,CAHD;;AAKO,IAAME,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAML,GAAN,EAAc;AACjC,MAAI,CAACK,GAAG,CAACC,IAAJ,CAASC,KAAV,IAAmB,CAACF,GAAG,CAACC,IAAJ,CAASE,QAAjC,EAA2C;AACzCT,IAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AACzBC,MAAAA,MAAM,EAAE,GADiB;AAEzBQ,MAAAA,KAAK,EAAE;AAFkB,KAAX,CAAhB;AAIA;AACD;;AAED,MAAG,CAACC,KAAK,CAACL,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAT,EAA0B;AACxBR,IAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeQ,MAAAA,KAAK,EAAE;AAAtB,KAAX,CAAhB;AACA;AACD;;AAED,MAAG,CAACC,KAAK,CAACL,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAL,CAAsBC,QAA1B,EAAmC;AACjCT,IAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeQ,MAAAA,KAAK,EAAE;AAAtB,KAAX,CAAhB;AACA;AACD;;AAED,MAAGJ,GAAG,CAACC,IAAJ,CAASE,QAAT,KAAsBE,KAAK,CAACL,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAL,CAAsB,UAAtB,CAAzB,EAA2D;AACzDR,IAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeQ,MAAAA,KAAK,EAAE;AAAtB,KAAX,CAAhB;AACA;AACD;;AAEH,MAAGJ,GAAG,CAACC,IAAJ,CAASC,KAAT,KAAmBG,KAAK,CAACL,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAL,CAAsBA,KAA5C,EAAkD;AAChDR,IAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AAAEC,MAAAA,MAAM,EAAE,GAAV;AAAeQ,MAAAA,KAAK,EAAE;AAAtB,KAAX,CAAhB;AACA;AACD;;AAEA,MAAME,IAAI,GAAGD,KAAK,CAACL,GAAG,CAACC,IAAJ,CAASC,KAAV,CAAlB;AACAR,EAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeW,IAAAA,IAAI,EAAED;AAArB,GAAX,CAAhB;AACA;AAEA,CAjCM;;;;AAmCA,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAACR,GAAD,EAAML,GAAN,EAAc;AACpC,MAAI,CAACK,GAAG,CAACC,IAAJ,CAASQ,SAAV,IAAuB,CAACT,GAAG,CAACC,IAAJ,CAASS,QAAjC,IAA6C,CAACV,GAAG,CAACC,IAAJ,CAASC,KAAvD,IAAgE,CAACF,GAAG,CAACC,IAAJ,CAASE,QAA9E,EAAwF;AACtFT,IAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AACzBC,MAAAA,MAAM,EAAE,GADiB;AAEzBQ,MAAAA,KAAK,EAAE;AAFkB,KAAX,CAAhB;AAIA;AACD;;AAGD,MAAMO,IAAI,GAAGC,mBAAOC,WAAP,CAAmBpB,UAAnB,CAAb;;AACA,MAAMqB,IAAI,GAAGF,mBAAOG,QAAP,CAAgBf,GAAG,CAACC,IAAJ,CAASE,QAAzB,EAAmCQ,IAAnC,CAAb;;AACA,MAAMK,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBc,MAAlC;AACA,MAAMC,YAAY,GAAGpB,GAAG,CAACC,IAAJ,CAASE,QAA9B;;AAEA,MAAMkB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAMC,MAAM,GAAG,IAAIC,IAAJ,EAAf;AACAD,IAAAA,MAAM,CAACE,OAAP,CAAeF,MAAM,CAACG,OAAP,KAAmB,CAAlC;AAEA,WAAOC,yBAAIC,IAAJ,CAAS;AACdC,MAAAA,GAAG,EAAEZ,MADS;AAEdd,MAAAA,KAAK,EAAEF,GAAG,CAACC,IAAJ,CAASC,KAFF;AAGd2B,MAAAA,IAAI,EAAE7B,GAAG,CAACC,IAAJ,CAASQ,SAHD;AAIdqB,MAAAA,GAAG,EAAEC,QAAQ,CAAET,MAAM,CAACU,OAAP,KAAmB,IAArB,EAA4B,EAA5B;AAJC,KAAT,EAKJC,OAAO,CAACC,GAAR,CAAYC,UALR,CAAP,CAJwB,CASI;AAC7B,GAVD;;AAaA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,GAAD,EAAMC,EAAN,EAAa;AACzB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAAG,CAAClB,MAAxB,EAAgCoB,CAAC,IAAI,CAArC,EAAwC;AACtC,UAAIF,GAAG,CAACE,CAAD,CAAH,KAAWD,EAAf,EAAmB;AACjB,eAAO,IAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD,GAPD;;AASA,MAAMhC,IAAI,GAAG,EAAb;AACA,MAAMgC,EAAE,GAAGP,QAAQ,CAAC/B,GAAG,CAACC,IAAJ,CAASqC,EAAV,EAAc,EAAd,CAAnB;AACAhC,EAAAA,IAAI,CAACkC,KAAL,GAAanB,WAAW,EAAxB;AAEAe,EAAAA,KAAK,CAACK,QAAD,EAAWH,EAAX,CAAL,IAAuBF,KAAK,CAACM,QAAD,EAAWJ,EAAX,CAA5B,GACIhC,IAAI,CAACgC,EAAL,GAAUP,QAAQ,CAAC/B,GAAG,CAACC,IAAJ,CAASqC,EAAV,EAAc,EAAd,CADtB,GAC0ChC,IAAI,CAACgC,EAAL,GAAUtB,MADpD;AAEAV,EAAAA,IAAI,CAACG,SAAL,GAAiBT,GAAG,CAACC,IAAJ,CAASQ,SAA1B;AACAH,EAAAA,IAAI,CAACI,QAAL,GAAgBV,GAAG,CAACC,IAAJ,CAASS,QAAzB;AACAJ,EAAAA,IAAI,CAACJ,KAAL,GAAaF,GAAG,CAACC,IAAJ,CAASC,KAAtB;AAEAkC,EAAAA,KAAK,CAACK,QAAD,EAAWH,EAAX,CAAL,IAAuBF,KAAK,CAACM,QAAD,EAAWJ,EAAX,CAA5B,GACIhC,IAAI,CAACqC,IAAL,GAAY,OADhB,GAC0BrC,IAAI,CAACqC,IAAL,GAAY,QADtC;AAGArC,EAAAA,IAAI,CAACqC,IAAL,KAAc,OAAd,GAAwBrC,IAAI,CAACsC,OAAL,GAAe,IAAvC,GAA8CtC,IAAI,CAACsC,OAAL,GAAe,KAA7D,CAlDoC,CAoDpC;;AACAvC,EAAAA,KAAK,CAACC,IAAI,CAACJ,KAAN,CAAL,GAAoBI,IAApB;AAGAZ,EAAAA,gBAAgB,CAACC,GAAD,EAAM,GAAN,EAAW;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAeW,IAAAA,IAAI,EAAED;AAArB,GAAX,CAAhB,CAxDoC,CA0DpC;AACA;;AAEAA,EAAAA,IAAI,CAACH,QAAL,GAAgBiB,YAAhB;AACAd,EAAAA,IAAI,CAACQ,IAAL,GAAYA,IAAZ;AACAT,EAAAA,KAAK,CAACC,IAAI,CAACJ,KAAN,CAAL,GAAoBI,IAApB;AACD,CAhEM",
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
      "sourcesContent": [
        "\nimport jwt from 'jsonwebtoken';\nimport bcrypt from 'bcrypt';\n\nconst saltRounds = 10;\n\n// Predefined generic function for server response in feature modules\n\nconst sendJSONresponse = (res, status, content) => {\n  res.status(status);\n  res.json(content);\n};\n\nexport const login = (req, res) => {\n  if (!req.body.email || !req.body.password) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Requires your email and password',\n    });\n    return;\n  }\n\n  if(!Users[req.body.email]){\n    sendJSONresponse(res, 401, { status: 401, error: 'Sign up first' });\n    return;\n  }\n\n  if(!Users[req.body.email].password){\n    sendJSONresponse(res, 401, { status: 401, error: 'Sign up Again. Your password was lost' });\n    return;\n  }\n  \n  if(req.body.password !== Users[req.body.email]['password']){\n    sendJSONresponse(res, 401, { status: 401, error: 'Incorrect password' });\n    return;\n  }\n\nif(req.body.email !== Users[req.body.email].email){\n  sendJSONresponse(res, 401, { status: 401, error: 'Incorrect username' });\n  return;\n}\n\n const user = Users[req.body.email];\n sendJSONresponse(res, 200, { status: 200, data: user });\n return;\n \n};\n\nexport const register = (req, res) => {\n  if (!req.body.firstName || !req.body.lastName || !req.body.email || !req.body.password) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Requires your firstName, lastName, email and password!',\n    });\n    return;\n  }\n\n\n  const salt = bcrypt.genSaltSync(saltRounds);\n  const hash = bcrypt.hashSync(req.body.password, salt);\n  const userId = Object.keys(Users).length;\n  const userPassword = req.body.password;\n\n  const generateJwt = () => {\n    const expiry = new Date();\n    expiry.setDate(expiry.getDate() + 7);\n\n    return jwt.sign({\n      _id: userId,\n      email: req.body.email,\n      name: req.body.firstName,\n      exp: parseInt((expiry.getTime() / 1000), 10),\n    }, process.env.JWT_SECRET); // DO NOT KEEP YOUR SECRET IN THE CODE!\n  };\n\n\n  const hasId = (arr, id) => {\n    for (let i = 0; i < arr.length; i += 1) {\n      if (arr[i] === id) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const user = {};\n  const id = parseInt(req.body.id, 10);\n  user.token = generateJwt();\n  \n  hasId(staffIds, id) || hasId(adminIds, id)\n    ? user.id = parseInt(req.body.id, 10) : user.id = userId;\n  user.firstName = req.body.firstName;\n  user.lastName = req.body.lastName;\n  user.email = req.body.email;\n\n  hasId(staffIds, id) || hasId(adminIds, id)\n    ? user.type = 'staff' : user.type = 'client';\n  \n  user.type === 'staff' ? user.isAdmin = true : user.isAdmin = false;\n\n  // save newly registered user\n  Users[user.email] = user;\n\n\n  sendJSONresponse(res, 201, { status: 201, data: user });\n\n  // The below is for security purpose, such that password and hash can only be seen\n  // after user sign in. Thus, making it  unhelpful for a hacker.\n\n  user.password = userPassword;\n  user.hash = hash;\n  Users[user.email] = user;\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555604168000
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\owner\\\\Banka\",\"filename\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\controllers\\\\accounts.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\owner\\\\Banka\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\owner\\Banka",
      "filename": "C:\\Users\\owner\\Banka\\server\\controllers\\accounts.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\owner\\Banka",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\owner\\Banka\\server\\controllers\\accounts.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\owner\\Banka\\server\\controllers\\accounts.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
        "sourceFileName": "accounts.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.delete_account = exports.activate_deactivate = exports.create = void 0;\n\nvar sendJSONresponse = function sendJSONresponse(res, status, content) {\n  res.status(status);\n  res.json(content);\n};\n\nvar timeStamp = function timeStamp() {\n  return \"\".concat(new Date().getFullYear(), \"-\").concat(new Date().getMonth() + 1, \"-\").concat(new Date().getDate(), \"  \").concat(new Date().getHours(), \":\").concat(new Date().getMinutes(), \":\").concat(new Date().getSeconds());\n};\n\nvar hasId = function hasId(arr, id) {\n  for (var i = 0; i < arr.length; i += 1) {\n    if (arr[i] === id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar create = function create(req, res) {\n  if (!req.body.firstName || !req.body.lastName || !req.body.email || !req.body.accountType) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'First name, last name, email and accountType are required, please!'\n    });\n  } else {\n    if (!Users[req.body.email]) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'You have not signed up. Sign up first to create an account!'\n      });\n    }\n\n    var account = {};\n    account.accountNumber = nextAccount;\n    nextAccount += 1;\n    account.firstName = req.body.firstName;\n    account.lastName = req.body.lastName;\n    account.email = req.body.email;\n    account.type = req.body.accountType;\n    account.openingBalance = 0.00;\n    account.createdOn = timeStamp();\n    account.owner = Users[req.body.email].id;\n    account.status = 'active';\n    account.balance = 0.00;\n    account.id = Object.keys(Accounts).length;\n    Accounts[account.accountNumber] = account;\n    sendJSONresponse(res, 201, {\n      status: 201,\n      data: account\n    });\n  }\n};\n\nexports.create = create;\n\nvar activate_deactivate = function activate_deactivate(req, res) {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!'\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Enter your email!'\n    });\n    return;\n  }\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place or it was deleted!\"\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!'\n    });\n    return;\n  }\n\n  if (!(hasId(staffIds, parseInt(Users[req.body.email].id, 10)) || hasId(adminIds, parseInt(Users[req.body.email].id, 10)))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff or Admin first, using your privately assigned Id!'\n    });\n    return;\n  }\n\n  Accounts[req.params.accountNumber].status === 'dormant' ? Accounts[req.params.accountNumber].status = 'active' : Accounts[req.params.accountNumber].status = 'dormant';\n  var account = Accounts[req.params.accountNumber];\n  sendJSONresponse(res, 201, {\n    status: 201,\n    data: account\n  });\n};\n\nexports.activate_deactivate = activate_deactivate;\n\nvar delete_account = function delete_account(req, res) {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!'\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Enter your email!'\n    });\n  } else {\n    if (!Accounts[req.params.accountNumber]) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: \"Account number doesn't exist in the first place or it was deleted!\"\n      });\n      return;\n    }\n\n    var regUserEmail = Users[req.body.email];\n\n    if (!regUserEmail) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'You have not signed up to perform this action!'\n      });\n      return;\n    }\n\n    if (!(hasId(staffIds, parseInt(regUserEmail.id, 10)) || hasId(adminIds, parseInt(regUserEmail.id, 10)))) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'Register as Staff or Admin first, using your privately assigned Id!'\n      });\n      return;\n    }\n\n    delete Accounts[req.params.accountNumber];\n    sendJSONresponse(res, 200, {\n      status: 204,\n      message: 'Account deleted successfully!'\n    });\n  }\n};\n\nexports.delete_account = delete_account;\nvar Num_of_handlers = 3;\nvar _default = Num_of_handlers;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "accounts.js"
      ],
      "names": [
        "sendJSONresponse",
        "res",
        "status",
        "content",
        "json",
        "timeStamp",
        "Date",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "getSeconds",
        "hasId",
        "arr",
        "id",
        "i",
        "length",
        "create",
        "req",
        "body",
        "firstName",
        "lastName",
        "email",
        "accountType",
        "error",
        "Users",
        "account",
        "accountNumber",
        "nextAccount",
        "type",
        "openingBalance",
        "createdOn",
        "owner",
        "balance",
        "Object",
        "keys",
        "Accounts",
        "data",
        "activate_deactivate",
        "params",
        "staffIds",
        "parseInt",
        "adminIds",
        "delete_account",
        "regUserEmail",
        "message",
        "Num_of_handlers"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
      "sourcesContent": [
        "\nlet sendJSONresponse = (res, status, content) => {\n  res.status(status);\n  res.json(content);\n};\n\nlet timeStamp = () => {\n  return `${(new Date()).getFullYear()}-${(new Date()).getMonth() + 1}-${(new Date()).getDate()}  ${(new Date()).getHours()}:${(new Date()).getMinutes()}:${(new Date()).getSeconds()}`;\n}\n\nconst hasId = (arr, id) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i] === id) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\nexport const create =  (req, res) => {\n  if (!req.body.firstName || !req.body.lastName || !req.body.email || !req.body.accountType) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'First name, last name, email and accountType are required, please!',\n    });\n  } else {\n    if (!Users[req.body.email]) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'You have not signed up. Sign up first to create an account!',\n      });\n    }\n\n    const account = {};\n\n    account.accountNumber = nextAccount;\n    nextAccount += 1;\n    account.firstName = req.body.firstName;\n    account.lastName = req.body.lastName;\n    account.email = req.body.email;\n    account.type = req.body.accountType;\n    account.openingBalance = 0.00;\n    account.createdOn = timeStamp();\n    account.owner = Users[req.body.email].id;\n    account.status = 'active';\n    account.balance = 0.00;\n    account.id = Object.keys(Accounts).length;\n\n\n    Accounts[account.accountNumber] = account;\n\n\n    sendJSONresponse(res, 201, { status: 201, data: account });\n  }\n};\n\nexport const activate_deactivate = (req, res) => {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!',\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Enter your email!',\n    });\n    return;\n  }\n\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place or it was deleted!\",\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!',\n    });\n    return;\n  }\n\n  if (!(hasId(staffIds, parseInt(Users[req.body.email].id, 10))\n      || hasId(adminIds, parseInt(Users[req.body.email].id, 10)))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff or Admin first, using your privately assigned Id!',\n    });\n    return;\n  }\n\n\n  Accounts[req.params.accountNumber].status === 'dormant'\n    ? Accounts[req.params.accountNumber].status = 'active'\n    : Accounts[req.params.accountNumber].status = 'dormant';\n  const account = Accounts[req.params.accountNumber];\n\n\n  sendJSONresponse(res, 201, { status: 201, data: account });\n};\n\nexport const delete_account = (req, res) => {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!',\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Enter your email!',\n    });\n  } else {\n    if (!Accounts[req.params.accountNumber]) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: \"Account number doesn't exist in the first place or it was deleted!\",\n      });\n      return;\n    }\n\n    const regUserEmail = Users[req.body.email];\n\n    if (!regUserEmail) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'You have not signed up to perform this action!',\n      });\n      return;\n    }\n\n    if (!(hasId(staffIds, parseInt(regUserEmail.id, 10))\n        || hasId(adminIds, parseInt(regUserEmail.id, 10)))) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'Register as Staff or Admin first, using your privately assigned Id!',\n      });\n      return;\n    }\n\n    delete Accounts[req.params.accountNumber];\n    sendJSONresponse(res, 200, { status: 204, message: 'Account deleted successfully!' });\n  }\n};\nconst Num_of_handlers = 3;\nexport default Num_of_handlers;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555604168000
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\controllers\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\owner\\\\Banka\",\"filename\":\"C:\\\\Users\\\\owner\\\\Banka\\\\server\\\\controllers\\\\transactions.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\owner\\\\Banka\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\owner\\Banka",
      "filename": "C:\\Users\\owner\\Banka\\server\\controllers\\transactions.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\owner\\Banka",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\owner\\Banka\\server\\controllers\\transactions.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\Users\\owner\\Banka\\server\\controllers\\transactions.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
        "sourceFileName": "transactions.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.credit = exports.debit = void 0;\n\nvar sendJSONresponse = function sendJSONresponse(res, status, content) {\n  res.status(status);\n  res.json(content);\n};\n\nvar timeStamp = function timeStamp() {\n  return \"\".concat(new Date().getFullYear(), \"-\").concat(new Date().getMonth() + 1, \"-\").concat(new Date().getDate(), \"  \").concat(new Date().getHours(), \":\").concat(new Date().getMinutes(), \":\").concat(new Date().getSeconds());\n};\n\nvar hasId = function hasId(arr, id) {\n  for (var i = 0; i < arr.length; i += 1) {\n    if (arr[i] === id) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar debit = function debit(req, res) {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!'\n    });\n    return;\n  }\n\n  if (!req.body.amount) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the amount!'\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified your email!'\n    });\n    return;\n  }\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place!\"\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!'\n    });\n    return;\n  }\n\n  if (!hasId(staffIds, parseInt(Users[req.body.email].id, 10))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff first, using your privately assigned Id!'\n    });\n    return;\n  }\n\n  var transaction = {};\n  transaction.transactionId = Object.keys(Transactions).length;\n  transaction.accountNumber = parseInt(req.params.accountNumber, 10);\n  transaction.amount = parseFloat(req.body.amount, 10);\n  transaction.cashier = parseInt(Users[req.body.email].id, 10);\n  transaction.createdOn = timeStamp();\n  transaction.transactionType = 'debit';\n  transaction.accountBalance = Accounts[transaction.accountNumber].balance - parseFloat(req.body.amount);\n  transaction.oldBalance = Accounts[transaction.accountNumber].balance;\n  transaction.newBalance = transaction.accountBalance; // update the account record accordingly with the credit action\n\n  Accounts[transaction.accountNumber].balance = transaction.newBalance; // Store or record transaction\n\n  Transactions[transaction.transactionId] = transaction;\n  sendJSONresponse(res, 201, {\n    status: 201,\n    data: transaction\n  });\n};\n\nexports.debit = debit;\n\nvar credit = function credit(req, res) {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!'\n    });\n    return;\n  }\n\n  if (!req.body.amount) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the amount!'\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified your email!'\n    });\n    return;\n  }\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place!\"\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!'\n    });\n    return;\n  }\n\n  if (!hasId(staffIds, parseInt(Users[req.body.email].id, 10))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff first, using your privately assigned Id!'\n    });\n    return;\n  }\n\n  var transaction = {};\n  transaction.transactionId = Object.keys(Transactions).length;\n  transaction.accountNumber = parseInt(req.params.accountNumber, 10);\n  transaction.amount = parseFloat(req.body.amount, 10);\n  transaction.cashier = parseInt(Users[req.body.email].id, 10);\n  transaction.createdOn = timeStamp();\n  transaction.transactionType = 'credit';\n  transaction.accountBalance = Accounts[transaction.accountNumber].balance + parseFloat(req.body.amount);\n  transaction.oldBalance = Accounts[transaction.accountNumber].balance;\n  transaction.newBalance = transaction.accountBalance; // update the account record accordingly with the credit action\n\n  Accounts[transaction.accountNumber].balance = transaction.newBalance; // Store or record transaction\n\n  Transactions[transaction.transactionId] = transaction;\n  sendJSONresponse(res, 201, {\n    status: 201,\n    data: transaction\n  });\n};\n\nexports.credit = credit;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "transactions.js"
      ],
      "names": [
        "sendJSONresponse",
        "res",
        "status",
        "content",
        "json",
        "timeStamp",
        "Date",
        "getFullYear",
        "getMonth",
        "getDate",
        "getHours",
        "getMinutes",
        "getSeconds",
        "hasId",
        "arr",
        "id",
        "i",
        "length",
        "debit",
        "req",
        "params",
        "accountNumber",
        "error",
        "body",
        "amount",
        "email",
        "Accounts",
        "Users",
        "staffIds",
        "parseInt",
        "transaction",
        "transactionId",
        "Object",
        "keys",
        "Transactions",
        "parseFloat",
        "cashier",
        "createdOn",
        "transactionType",
        "accountBalance",
        "balance",
        "oldBalance",
        "newBalance",
        "data",
        "credit"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\owner\\Banka\\server\\controllers",
      "sourcesContent": [
        "const sendJSONresponse = (res, status, content) => {\n  res.status(status);\n  res.json(content);\n};\n\nlet timeStamp = () => {\n  return `${(new Date()).getFullYear()}-${(new Date()).getMonth() + 1}-${(new Date()).getDate()}  ${(new Date()).getHours()}:${(new Date()).getMinutes()}:${(new Date()).getSeconds()}`;\n}\n\nconst hasId = (arr, id) => {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i] === id) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport const debit = (req, res) => {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!',\n    });\n    return;\n  }\n\n  if (!req.body.amount) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the amount!',\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified your email!',\n    });\n    return;\n  }\n\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place!\",\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!',\n    });\n    return;\n  }\n\n  if (!(hasId(staffIds, parseInt(Users[req.body.email].id, 10)))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff first, using your privately assigned Id!',\n    });\n    return;\n  }\n\n  const transaction = {};\n\n  transaction.transactionId = Object.keys(Transactions).length;\n  transaction.accountNumber = parseInt(req.params.accountNumber, 10);\n  transaction.amount = parseFloat(req.body.amount, 10);\n  transaction.cashier = parseInt(Users[req.body.email].id, 10);\n  transaction.createdOn = timeStamp();\n  transaction.transactionType = 'debit';\n  transaction.accountBalance = Accounts[transaction.accountNumber].balance\n   - parseFloat(req.body.amount);\n  transaction.oldBalance = Accounts[transaction.accountNumber].balance;\n  transaction.newBalance = transaction.accountBalance;\n\n  // update the account record accordingly with the credit action\n  Accounts[transaction.accountNumber].balance = transaction.newBalance;\n\n  // Store or record transaction\n  Transactions[transaction.transactionId] = transaction;\n\n\n  sendJSONresponse(res, 201, { status: 201, data: transaction });\n};\n\nexport const credit = (req, res) => {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!',\n    });\n    return;\n  }\n\n  if (!req.body.amount) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the amount!',\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified your email!',\n    });\n    return;\n  }\n\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place!\",\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!',\n    });\n    return;\n  }\n\n  if (!(hasId(staffIds, parseInt(Users[req.body.email].id, 10)))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff first, using your privately assigned Id!',\n    });\n    return;\n  }\n\n  const transaction = {};\n\n  transaction.transactionId = Object.keys(Transactions).length;\n  transaction.accountNumber = parseInt(req.params.accountNumber, 10);\n  transaction.amount = parseFloat(req.body.amount, 10);\n  transaction.cashier = parseInt(Users[req.body.email].id, 10);\n  transaction.createdOn = timeStamp();\n  transaction.transactionType = 'credit';\n  transaction.accountBalance = Accounts[transaction.accountNumber].balance\n  + parseFloat(req.body.amount);\n  transaction.oldBalance = Accounts[transaction.accountNumber].balance;\n  transaction.newBalance = transaction.accountBalance;\n\n  // update the account record accordingly with the credit action\n  Accounts[transaction.accountNumber].balance = transaction.newBalance;\n\n  // Store or record transaction\n  Transactions[transaction.transactionId] = transaction;\n\n\n  sendJSONresponse(res, 201, { status: 201, data: transaction });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1555604168000
  }
}