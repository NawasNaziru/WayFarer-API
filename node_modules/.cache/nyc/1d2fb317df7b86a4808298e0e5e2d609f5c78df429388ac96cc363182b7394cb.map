{"version":3,"sources":["accounts.js"],"names":["sendJSONresponse","res","status","content","json","timeStamp","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","hasId","arr","id","i","length","module","exports","create","req","body","firstName","lastName","email","accountType","error","Users","account","accountNumber","nextAccount","type","openingBalance","createdOn","owner","balance","Object","keys","Accounts","data","activate_deactivate","params","staffIds","parseInt","adminIds","delete","regUserEmail","message"],"mappings":"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","file":"accounts.js","sourceRoot":"C:/Users/owner/Banka/app_api/controllers","sourcesContent":["/* eslint-disable func-names */\n/* eslint-disable no-undef */\nconst sendJSONresponse = function (res, status, content) {\n  res.status(status);\n  res.json(content);\n};\n\n// eslint-disable-next-line no-useless-concat\nfunction timeStamp() {\n  return `${(new Date()).getFullYear()}-${(new Date()).getMonth() + 1}-${(new Date()).getDate()}  ${(new Date()).getHours()}:${(new Date()).getMinutes()}:${(new Date()).getSeconds()}`;\n}\n\nconst hasId = function (arr, id) {\n  for (let i = 0; i < arr.length; i += 1) {\n    if (arr[i] === id) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\nmodule.exports.create = function (req, res) {\n  if (!req.body.firstName || !req.body.lastName || !req.body.email || !req.body.accountType) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'First name, last name, email and accountType are required, please!',\n    });\n  } else {\n    if (!Users[req.body.email]) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'You have not signed up. Sign up first to create an account!',\n      });\n    }\n\n    const account = {};\n\n    account.accountNumber = nextAccount;\n    nextAccount += 1;\n    account.firstName = req.body.firstName;\n    account.lastName = req.body.lastName;\n    account.email = req.body.email;\n    account.type = req.body.accountType;\n    account.openingBalance = 0.00;\n    account.createdOn = timeStamp();\n    account.owner = Users[req.body.email].id;\n    account.status = 'active';\n    account.balance = 0.00;\n    account.id = Object.keys(Accounts).length;\n\n\n    Accounts[account.accountNumber] = account;\n\n\n    sendJSONresponse(res, 201, { status: 201, data: account });\n  }\n};\n\nmodule.exports.activate_deactivate = function (req, res) {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!',\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Enter your email!',\n    });\n    return;\n  }\n\n\n  if (!Accounts[req.params.accountNumber]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: \"Account number doesn't exist in the first place or it was deleted!\",\n    });\n    return;\n  }\n\n  if (!Users[req.body.email]) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'You have not signed up!',\n    });\n    return;\n  }\n\n  if (!(hasId(staffIds, parseInt(Users[req.body.email].id, 10))\n      || hasId(adminIds, parseInt(Users[req.body.email].id, 10)))) {\n    sendJSONresponse(res, 404, {\n      status: 404,\n      error: 'Register as Staff or Admin first, using your privately assigned Id!',\n    });\n    return;\n  }\n\n  // eslint-disable-next-line no-unused-expressions\n  Accounts[req.params.accountNumber].status === 'dormant'\n    ? Accounts[req.params.accountNumber].status = 'active'\n    : Accounts[req.params.accountNumber].status = 'dormant';\n  const account = Accounts[req.params.accountNumber];\n\n\n  sendJSONresponse(res, 201, { status: 201, data: account });\n};\n\nmodule.exports.delete = function (req, res) {\n  if (!req.params.accountNumber) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'You have not specified the account number in the params!',\n    });\n    return;\n  }\n\n  if (!req.body.email) {\n    sendJSONresponse(res, 400, {\n      status: 400,\n      error: 'Enter your email!',\n    });\n  } else {\n    if (!Accounts[req.params.accountNumber]) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: \"Account number doesn't exist in the first place or it was deleted!\",\n      });\n      return;\n    }\n\n    const regUserEmail = Users[req.body.email];\n\n    if (!regUserEmail) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'You have not signed up to perform this action!',\n      });\n      return;\n    }\n\n    if (!(hasId(staffIds, parseInt(regUserEmail.id, 10))\n        || hasId(adminIds, parseInt(regUserEmail.id, 10)))) {\n      sendJSONresponse(res, 404, {\n        status: 404,\n        error: 'Register as Staff or Admin first, using your privately assigned Id!',\n      });\n      return;\n    }\n\n    delete Accounts[req.params.accountNumber];\n    sendJSONresponse(res, 200, { status: 204, message: 'Account deleted successfully!' });\n  }\n};\n"]}