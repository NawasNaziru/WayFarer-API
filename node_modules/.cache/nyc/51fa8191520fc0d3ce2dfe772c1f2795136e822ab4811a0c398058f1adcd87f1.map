{"version":3,"sources":["passport.js"],"names":["passport","require","LocalStrategy","Strategy","bcrypt","isValidPassword","reqbodypassword","userSavedHash","compareSync","use","usernameField","username","password","done","user","Users","message","hash"],"mappings":";;AAAA,MAAMA,WAAWC,QAAQ,UAAR,CAAjB;AACA,MAAMC,gBAAgBD,QAAQ,gBAAR,EAA0BE,QAAhD;AACA,MAAMC,SAASH,QAAQ,QAAR,CAAf;;AAGA;AACA,MAAMI,kBAAkB,UAAUC,eAAV,EAA2BC,aAA3B,EAA0C;AAChE,SAAOH,OAAOI,WAAP,CAAmBF,eAAnB,EAAoCC,aAApC,CAAP;AACD,CAFD;;AAKAP,SAASS,GAAT,CAAa,IAAIP,aAAJ,CAAkB;AAC7BQ,iBAAe;AADc,CAAlB,EAGZ,CAACC,QAAD,EAAWC,QAAX,EAAqBC,IAArB,KAA8B;AAC7B;AACA,QAAMC,OAAOC,MAAMJ,QAAN,CAAb;AACA,MAAI,CAACG,IAAL,EAAW;AACT,WAAOD,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBG,eAAS;AADc,KAAlB,CAAP;AAGD;AACD,MAAI,CAACX,gBAAgBO,QAAhB,EAA0BE,KAAKG,IAA/B,CAAL,EAA2C;AACzC,WAAOJ,KAAK,IAAL,EAAW,KAAX,EAAkB;AACvBG,eAAS;AADc,KAAlB,CAAP;AAGD;AACD,SAAOH,KAAK,IAAL,EAAWC,IAAX,CAAP;AACD,CAjBY,CAAb","file":"passport.js","sourceRoot":"C:/Users/owner/Banka/app_api/config","sourcesContent":["const passport = require('passport');\nconst LocalStrategy = require('passport-local').Strategy;\nconst bcrypt = require('bcrypt');\n\n\n// eslint-disable-next-line func-names\nconst isValidPassword = function (reqbodypassword, userSavedHash) {\n  return bcrypt.compareSync(reqbodypassword, userSavedHash);\n};\n\n\npassport.use(new LocalStrategy({\n  usernameField: 'email',\n},\n((username, password, done) => {\n  // eslint-disable-next-line no-undef\n  const user = Users[username];\n  if (!user) {\n    return done(null, false, {\n      message: 'Incorrect username.',\n    });\n  }\n  if (!isValidPassword(password, user.hash)) {\n    return done(null, false, {\n      message: 'Incorrect password.',\n    });\n  }\n  return done(null, user);\n})));\n"]}